name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Iniciar sesión en Azure
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      - name: Iniciar sesión en ACR
        run: az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Construir y subir imagen Docker
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/mi-app:latest .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/mi-app:latest

      - name: Eliminar contenedor anterior (si existe)
        continue-on-error: true
        run: |
          az container delete \
            --name ${{ secrets.ACI_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --yes

      - name: Crear contenedor nuevo en ACI
        run: |
          az container create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/mi-app:latest \
            --dns-name-label ${{ secrets.ACI_DNS_LABEL }} \
            --ports 80 \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.AZURE_CLIENT_ID }} \
            --registry-password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --location ${{ secrets.ACI_REGION }} \
            --os-type Linux \
            --restart-policy Always
